# Generated by Django 5.2.3 on 2025-06-28 19:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the section.', max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="The member's first name, as it appears on the roster.", max_length=50)),
                ('last_name', models.CharField(help_text="The member's last name, as it appears on the roster.", max_length=50)),
                ('year', models.PositiveSmallIntegerField(choices=[(1, 'Rookie'), (2, '2nd Year'), (3, '3rd Year'), (4, '4th Year'), (5, '5th Year+')], help_text="The member's year in band.")),
                ('email', models.EmailField(help_text="The member's university email address, as it appears on the roster.", max_length=254, unique=True)),
                ('date_added', models.DateField(auto_now_add=True, help_text='The date that the member model was created.')),
                ('user', models.OneToOneField(blank=True, help_text='The user associated with the member.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(help_text='The section that the member belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='members', to='members.section')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='MemberPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(help_text="The member's chosen nickname, to be displayed instead of their roster name.", max_length=50)),
                ('preferred_email', models.EmailField(help_text="The member's preferred contact email.", max_length=254, unique=True)),
                ('member', models.OneToOneField(help_text='The member that the preferences belong to.', on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='members.member')),
            ],
        ),
        migrations.CreateModel(
            name='StravaAuth',
            fields=[
                ('strava_id', models.BigIntegerField(help_text="The member's Strava athlete ID.", primary_key=True, serialize=False)),
                ('access_token', models.CharField(help_text="The member's current Strava access token. This is short-lived, and must be refreshed upon expiration.", max_length=100)),
                ('refresh_token', models.CharField(help_text="The member's current Strava refresh token. Used to refresh the member's Strava access token.", max_length=100)),
                ('token_expires', models.DateTimeField(help_text="The time that the member's Strava access token expires and must be refreshed.")),
                ('scope', models.CharField(help_text="The scope(s) that the member's Strava access token has.", max_length=100)),
                ('member', models.OneToOneField(help_text='The member that the access token information belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='strava_auth', to='members.member')),
            ],
        ),
    ]
